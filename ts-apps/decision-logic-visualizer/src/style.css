@import url('https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap');

@import '@xyflow/svelte/dist/style.css';

@import 'tailwindcss';
@import './tailwindcss-animate.css';

/*******************************************************
  Base Shadcn-Svelte theme variables / config / styles
*********************************************************

  Adapted from https://github.com/MattL-NZ/svelte-tailwind4-starter/blob/main/src/app.css

  > The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  > If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

:root {
  /* Base Shadcn Svelte colors */
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  /* --primary: oklch(0.6 0.118 184.704); */
  /* #001188; */
  /* 190 91% 36%; */
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
  --accent: var(--color-sky-100);
  /* 210 40% 96.1%; */
  --accent-foreground: 222.2 47.4% 11.2%;
  --destructive: 0 72.2% 50.6%;
  --destructive-foreground: 210 40% 98%;
  --ring: 222.2 84% 4.9%;
  --radius: 0.3rem;
  --sidebar-background: 0 0% 98%;
  --sidebar-foreground: 240 5.3% 26.1%;
  --sidebar-primary: 232 27% 35%;
  --sidebar-primary-foreground: 0 0% 98%;
  --sidebar-accent: 240 4.8% 95.9%;
  --sidebar-accent-foreground: 240 5.9% 10%;
  --sidebar-border: 220 13% 91%;
  --sidebar-ring: 217.2 91.2% 59.8%;
}

@theme inline {
  /***************************************
      Base Shadcn Svelte colors
  ****************************************/

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: var(--primary);
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-caution: var(--color-red-500);
  --color-warning: var(--color-amber-500);
  --color-info: var(--color-sky-500);
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: var(--accent);
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  /***************************************
        Our specific colors
  ****************************************/

  --primary: var(--color-cyan-900);
  --color-node-text: #00004d;
  /* Another color to consider for node annotations? --color-zinc-400 */
  --color-node-annotation: var(--color-node-text);
  --color-secondary: #2563eb;
  --color-button: #c7d2fe;
  --color-button-hover: var(--accent);
  /* #a5b4fc; */

  /* TODO: Try to fix this? */
  /* Border */
  --radius-xl: calc(var(--radius) + 4px);
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /***************************************
        Highlighted vs normal paths 
  ****************************************/

  /* Stroke width */
  --default-stroke-width: 1px;
  /* TODO: Think about whether the default should be 2px */
  --highlighted-stroke-width: calc(var(--default-stroke-width) + 2px);

  /* Stroke color */
  --default-stroke-color: var(--color-primary);
  --color-highlighted-path-in-flow: var(--color-sky-600);
  /* TODO: Should check the colors against some color palette generator */

  /***************************************
      Compatible vs incompatible paths 
  ****************************************/

  --color-incompatible-path: var(--color-zinc-300);

  /***************************************
         BoolValue: True vs False 
  ****************************************/

  --color-true-value: var(--color-lime-200);
  --color-false-value: var(--color-rose-200);
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/*************************************
  Utility SF styles
*************************************/

@utility svelte-flow__node-basic {
  font-size: 1rem;
  text-align: center;

  color: var(--xy-node-color, var(--xy-node-color-default));
  background-color: var(
    --xy-node-background-color,
    var(--xy-node-background-color-default)
  );
}

/** Controls min/max widths of the labels,
* as well as text wrapping behavior.
*
* To be used in the div that wraps the label. */
@utility label-wrapper-for-content-bearing-sf-node {
  /* horizontal padding */
  @apply px-2.5;
  /* vertical padding */
  @apply py-2;

  /* To deal with long text / avoid overflow issues:

    break-words: so that long unbreakable words won't overflow the container

    whitespace-pre-wrap vs whitespace-breaks-spaces:
      https://stackoverflow.com/questions/64699828/css-property-white-space-example-for-break-spaces
  */
  @apply break-words whitespace-break-spaces;

  /*
  * Max width so that the node doesn't get too wide.
  * But also need min width to minimize edge crossings when
  * stacking nodes with labels of different lengths
  * on top of each other.
  *
  * TODO: To experiment with in the future: probably better to dynamically
  * adjust the min/max width based on the size of the the relevant neighbor nodes?
  * Hard to find a one-size-fits-all set of min/max widths.
  */
  @apply min-w-[12ch] leading-normal;
  max-width: 40ch;
}

/** For the source and sink bundling nodes */
@utility bundling-node {
  @apply svelte-flow__node-basic;
  /* Will lose the bundling node if width is 0 px */
  width: 1px;
  height: 1px;
}

@utility node-annotation {
  position: absolute;
  top: -25px; /* Adjust this value to control the vertical position */
  left: 50%;
  transform: translateX(-58%); /* Centers the text horizontally, ish */

  @apply uppercase;
  @apply text-base leading-none;
  @apply text-(--color-node-annotation);
}

/*************************************
  Other styles
*************************************/

body {
  color: var(--color-primary);
  background-color: white;
  margin: 0;
}

/* TODO: Check if this class really can be used w/o @utility */
.button {
  background-color: var(--color-secondary);
  color: transparent;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
}

/* svelte-flow specific */

:root,
.svelte-flow {
  --xy-node-border-radius: var(--radius);
  --xy-node-color: var(--color-node-text);
  --xy-node-border: 2px solid var(--color-primary);
  --xy-handle-background-color: var(--color-primary);
  --xy-edge-stroke: var(--color-primary);

  .svelte-flow__node {
    font-family: 'Source Sans 3', serif;
    font-optical-sizing: auto;
    font-style: normal;
  }
}
