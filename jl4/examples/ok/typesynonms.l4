DECLARE Bool IS BOOLEAN

GIVETH A Bool
true MEANS TRUE

GIVETH A BOOLEAN
false MEANS FALSE

GIVETH A LIST OF Bool
example1 MEANS LIST true, false

DECLARE LL a IS LIST OF LIST OF a

GIVETH LL OF NUMBER
example2 MEANS LIST (LIST 1)

DECLARE Predicate a  IS A FUNCTION FROM a TO BOOLEAN
DECLARE NumPredicate ^  ^ Predicate OF NUMBER

GIVETH A NumPredicate
even MEANS GIVEN x YIELD x MODULO 2 EQUALS 0

GIVETH A NumPredicate
odd  MEANS GIVEN x YIELD x MODULO 2 EQUALS 1

GIVETH LL OF A NumPredicate
example3 MEANS LIST (LIST even, odd)

GIVETH A BOOLEAN
example4 MEANS even 3

#EVAL example4

DECLARE Transformer a IS A FUNCTION FROM Predicate a TO Predicate a
DECLARE NumPredicateTransformer IS A Transformer OF NUMBER

negate MEANS
  GIVEN p YIELD GIVEN x YIELD NOT p x

-- It is still a weakness of the current language that
-- we do not have full currying and no truly first-class
-- higher-order functions.
--
-- We cannot directly apply negate. We have to introduce
-- an intermediate name.

GIVETH A NumPredicate
odd2 MEANS negate even

GIVETH A BOOLEAN
example5 MEANS odd2 3

#EVAL example5
